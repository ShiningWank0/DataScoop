name: Tests

# テストはCI環境でのみ実行
# ローカル環境ではテストを実行しません

on:
  push:
    branches: [ dev ]
    tags:
      - 'v*.*.*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --statistics
        
    - name: Type check with mypy
      run: |
        mypy --ignore-missing-imports datascoop
        
    - name: Test with pytest
      run: |
        pytest
        
    # タグがプッシュされた場合はリリース情報を出力
    - name: Prepare release info
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        echo "TAG=${GITHUB_REF#refs/tags/}" >> release_info.txt
        echo "COMMIT=${GITHUB_SHA}" >> release_info.txt
        echo "WORKFLOW_ID=${GITHUB_RUN_ID}" >> release_info.txt
        
    # タグがプッシュされた場合はアーティファクトをアップロード
    - name: Upload release info
      if: startsWith(github.ref, 'refs/tags/v') && matrix.python-version == '3.12'
      uses: actions/upload-artifact@v4
      with:
        name: release-info
        path: release_info.txt
        retention-days: 1
